import{_ as e,c as a,o as t,U as i}from"./chunks/framework.on6qGByC.js";const u=JSON.parse('{"title":"Why Graphane?","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/in-depth/architecture/why.md","filePath":"guide/in-depth/architecture/why.md"}'),n={name:"guide/in-depth/architecture/why.md"},r=i('<h1 id="why-graphane" tabindex="-1">Why Graphane? <a class="header-anchor" href="#why-graphane" aria-label="Permalink to &quot;Why Graphane?&quot;">​</a></h1><p><strong>Graphane</strong> is a <strong>micro-framework</strong> that empowers designers and developers <strong>to craft interactive and customizable data-driven graphics, diagrams, and visualizations</strong>.</p><p>Graphane merges the flexibility of <strong>web components</strong>, ensuring compatibility with leading frameworks, with a comprehensive <strong>system of templates</strong> grounded in directives and <strong>reactive data</strong> integration, all supported by a resilient and <strong>high-performance</strong> implementation.</p><h2 id="template-centric" tabindex="-1">Template-centric <a class="header-anchor" href="#template-centric" aria-label="Permalink to &quot;Template-centric&quot;">​</a></h2><p>At the heart of <strong>Graphane</strong> is a <strong>flexible SVG template system</strong>. Data is combined with graphical elements in real time through a simple set of attributes known as directives. This template-centric approach provides a dynamic and intuitive means of shaping visualizations, offering flexibility in the representation of data-driven graphics.</p><h2 id="data-driven" tabindex="-1">Data-Driven <a class="header-anchor" href="#data-driven" aria-label="Permalink to &quot;Data-Driven&quot;">​</a></h2><p><strong>Graphane</strong> significantly streamlines the intricate process of <strong>developing data-driven graphs</strong>. The framework facilitates the reactivity connection of data to diverse graphical elements. The central emphasis of Graphane revolves around creating dynamic visualizations, enabling designers and developers to infuse interactivity and data reactivity into their graphics.</p><h2 id="declarative" tabindex="-1">Declarative <a class="header-anchor" href="#declarative" aria-label="Permalink to &quot;Declarative&quot;">​</a></h2><p>The <strong>Graphane declarative</strong> approach offers <strong>several advantages</strong> over the imperative model based primarily on Javascript code.</p><h3 id="readability-and-intuitiveness" tabindex="-1">Readability and Intuitiveness <a class="header-anchor" href="#readability-and-intuitiveness" aria-label="Permalink to &quot;Readability and Intuitiveness&quot;">​</a></h3><p>Declarative code is <strong>easier to read and understand</strong>. We declare what we want to accomplish, and the system determines how to do it. In the case of SVG templates in Graphane, we declare the relationship between data and graphical elements using directives. This approach makes the code more intuitive and easier to use, especially for designers or users with little programming knowledge.</p><h3 id="separation-of-concerns" tabindex="-1">Separation of Concerns <a class="header-anchor" href="#separation-of-concerns" aria-label="Permalink to &quot;Separation of Concerns&quot;">​</a></h3><p>It provides a <strong>clean separation between data and presentation logic</strong>. The data handling is abstracted from the visualization code in the declarative form. We can build an aesthetic design without limitations. The graphics and the data are combined smoothly.</p><h2 id="interactivity" tabindex="-1">Interactivity <a class="header-anchor" href="#interactivity" aria-label="Permalink to &quot;Interactivity&quot;">​</a></h2><p>Graphane <strong>strongly emphasizes interactivity</strong>, elevating the user experience by enabling active engagement with visualizations. Whether designing a sophisticated user interface or developing a data-driven graph, the dynamic features of Graphane take center stage in fostering a seamless and engaging interaction. With Graphane, users go beyond passive observation—they become active participants in exploring data visualization.</p><p>Of course, for event management, we use Javascript; we do not hate the code, and we understand that using code is especially useful to manage the user&#39;s intentions when interacting with the graphics.</p><h2 id="seamless-integration" tabindex="-1">Seamless Integration <a class="header-anchor" href="#seamless-integration" aria-label="Permalink to &quot;Seamless Integration&quot;">​</a></h2><p>As a web component, Graphane ensures <strong>easy integration and reusability</strong> from the realms of popular web frameworks to simple HTML pages through all types of CMS. The Graphane micro-framework boasts a lightweight footprint and exceptional performance, allowing us to incorporate dynamic SVG functionality without significantly burdening our projects. This design promotes accessibility and flexibility, making Graphane an ideal choice for projects where efficiency and responsiveness are keys to success.</p>',18),s=[r];function o(h,c,d,l,p,g){return t(),a("div",null,s)}const f=e(n,[["render",o]]);export{u as __pageData,f as default};
