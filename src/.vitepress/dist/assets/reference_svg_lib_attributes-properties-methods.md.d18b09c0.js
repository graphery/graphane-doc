import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.05b02974.js";const F=JSON.parse('{"title":"Attributes, properties and methods","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/attributes-properties-methods.md","filePath":"reference/svg/lib/attributes-properties-methods.md"}'),n={name:"reference/svg/lib/attributes-properties-methods.md"},l=o(`<h1 id="attributes-properties-and-methods" tabindex="-1">Attributes, properties and methods <a class="header-anchor" href="#attributes-properties-and-methods" aria-label="Permalink to &quot;Attributes, properties and methods&quot;">​</a></h1><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><p>In Graphane the attributes are handled as methods where the hyphenated name (<code>-</code>) is replaced by the underscore (<code>_</code>). The rest of the name stays the same.</p><table><thead><tr><th>attribute name</th><th>Graphane method</th></tr></thead><tbody><tr><td><code>x</code></td><td><code>.x()</code></td></tr><tr><td><code>viewBox</code></td><td><code>.viewBox()</code></td></tr><tr><td><code>stroke-width</code></td><td><code>.stroke_width()</code></td></tr></tbody></table><p>The call to one of these methods with parameters sets the attribute and returns the object for chained calls. The call without parameter returns the value of the attribute.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">radius</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> circle.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">radius</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> circle.</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p>In Graphane the properties are handled as methods with the original name:</p><table><thead><tr><th>property name</th><th>Graphane method</th></tr></thead><tbody><tr><td><code>.tagName</code></td><td><code>.tagName()</code></td></tr><tr><td><code>.nextElementSibling</code></td><td><code>.nextElementSibling()</code></td></tr><tr><td><code>.attributes</code></td><td><code>.attributes()</code></td></tr></tbody></table><p>The call to one of these methods with parameters sets the property and returns the object for chained calls. The call without parameter returns the value of the property.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(circle.</span><span style="color:#B392F0;">tagName</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(circle.</span><span style="color:#6F42C1;">tagName</span><span style="color:#24292E;">());</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>In Graphane the methods are handled without changes in its behavior, parameters, or return.</p><table><thead><tr><th>method name</th><th>Graphane method</th></tr></thead><tbody><tr><td><code>.getScreenCTM()</code></td><td><code>.getScreenCTM()</code></td></tr><tr><td><code>.addEventListener()</code></td><td><code>.addEventListener()</code></td></tr><tr><td><code>.querySelector()</code></td><td><code>.querySelector()</code></td></tr></tbody></table><p>These methods receive the same parameters and return the same values as the original method, except when:</p><ul><li>the return is <code>undefined</code>, the wrapped element is returned.</li><li>the return is an SVG element or an array of SVG elements, those elements are converted into a Graphane wrapped object.</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ssvg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// return an array with Graphane objects</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ssvg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// return an array with Graphane objects</span></span></code></pre></div>`,17),p=[l];function t(r,c,y,E,d,i){return a(),e("div",null,p)}const C=s(n,[["render",t]]);export{F as __pageData,C as default};
