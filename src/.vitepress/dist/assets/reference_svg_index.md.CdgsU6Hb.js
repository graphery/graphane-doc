import{_ as a,c as t,o as e,U as i,m as s}from"./chunks/framework.on6qGByC.js";const u=JSON.parse('{"title":"SVG","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/svg/index.md","filePath":"reference/svg/index.md"}'),n={name:"reference/svg/index.md"},l=i(`<h1 id="svg" tabindex="-1">SVG <a class="header-anchor" href="#svg" aria-label="Permalink to &quot;SVG&quot;">​</a></h1><p>The <code>g-composer</code> can include a <code>svg</code> tag or link it as external resource with <code>svg-src</code>. This SVG is a standard SVG with some extra features for templating the content from the data.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">g-composer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value: 50&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- g-composer component --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> viewBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 0 400 270&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- SVG Template --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defs</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;y of 5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- g-for attribute --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defs</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x of 20&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- g-for attribute --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;((y * 20) + x </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              g-bind:transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;translate(x * 20, y * 55)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;M14,30L14,49L4,49L4,30C2,29,1,28,1,27L1,11C1,10,1,9,3,9L7,9L6.3,3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">               C6,-1,11,-1,11.7,3L11,9L15,9C17,8.9,17,10,17,11L17,27C17,28,16,29,14,30Z&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        /&gt;                      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- g-if &amp; g-bind attributes --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">g-composer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,3),h=s("g-composer",{data:"value: 50"},[s("svg",{viewBox:"0 0 400 270"},[s("defs",{"g-for":"y of 5"},[s("defs",{"g-for":"x of 20"},[s("path",{"g-if":"((y * 20) + x < value)","g-bind:transform":"translate(x * 20, y * 55)",d:`M14,30L14,49L4,49L4,30C2,29,1,28,1,27L1,11C1,10,1,9,3,9L7,9L6.3,3
               C6,-1,11,-1,11.7,3L11,9L15,9C17,8.9,17,10,17,11L17,27C17,28,16,29,14,30Z`})])])])],-1),p=i('<h2 id="templating-directives" tabindex="-1">Templating directives <a class="header-anchor" href="#templating-directives" aria-label="Permalink to &quot;Templating directives&quot;">​</a></h2><p>SVG template is based on these special attributes or directives:</p><ul><li><a href="./templating/g-bind.html"><code>g-bind</code></a> - set attributes value based on the data.</li><li><a href="./templating/g-content.html"><code>g-content</code></a> - insert content into the element.</li><li><a href="./templating/g-for.html"><code>g-for</code></a> - render the element multiple times based on the data.</li><li><a href="./templating/g-if.html"><code>g-if</code></a> - conditionally render an element based on the data.</li><li><a href="./templating/g-on.html"><code>g-on</code></a> - attach an event listener to the element.</li></ul><h2 id="attribute-svg-src" tabindex="-1">Attribute <code>svg-src</code> <a class="header-anchor" href="#attribute-svg-src" aria-label="Permalink to &quot;Attribute `svg-src`&quot;">​</a></h2><p>The <code>g-composer</code> component has this attribute:</p><ul><li><a href="./src.html"><code>svg-src</code></a> link to an external SVG template file.</li></ul><h2 id="property-svg" tabindex="-1">Property <code>.svg</code> <a class="header-anchor" href="#property-svg" aria-label="Permalink to &quot;Property `.svg`&quot;">​</a></h2><p>The <code>g-composer</code> component has this property:</p><ul><li><a href="./property.html"><code>.svg</code></a> a <a href="./lib/">wrapped</a> version of the SVG generated.</li></ul>',9),r=[l,h,p];function k(d,o,g,E,c,y){return e(),t("div",null,r)}const f=a(n,[["render",k]]);export{u as __pageData,f as default};
