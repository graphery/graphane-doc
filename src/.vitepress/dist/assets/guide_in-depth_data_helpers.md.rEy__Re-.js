import{_ as i,c as s,o as a,U as t}from"./chunks/framework.on6qGByC.js";const y=JSON.parse('{"title":"Data helpers","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/in-depth/data/helpers.md","filePath":"guide/in-depth/data/helpers.md"}'),e={name:"guide/in-depth/data/helpers.md"},l=t('<h1 id="data-helpers" tabindex="-1">Data helpers <a class="header-anchor" href="#data-helpers" aria-label="Permalink to &quot;Data helpers&quot;">​</a></h1><p>When the data is an array, we may need helper functions to get the maximum, minimum, average, unique values, etc. You can use Javascript functions to perform these operations, but Graphane offers a series of helpers that allow us to obtain this information in a very efficient way.</p><p>To access these helper functions we will use <code>data.$min()</code>, <code>data.$max()</code>, etc., inside the template.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>These helper functions are only available from the template.</p></div><h2 id="data-min-key" tabindex="-1"><code>data.$min([key])</code> <a class="header-anchor" href="#data-min-key" aria-label="Permalink to &quot;`data.$min([key])`&quot;">​</a></h2><p>Retrieve the minimum value of the array. If no parameter is provided, it defaults to treating the array data as numeric.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$min()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is passed as a parameter, it evaluates the objects within the array using the specified key.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$min(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="data-max-key" tabindex="-1"><code>data.$max([key])</code> <a class="header-anchor" href="#data-max-key" aria-label="Permalink to &quot;`data.$max([key])`&quot;">​</a></h2><p>Obtain the maximum value of the array. If no parameter is given, it treats the array data as a numeric value.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$max()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is provided, it evaluates the objects within the array using the specified key.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$max(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="data-count-key" tabindex="-1"><code>data.$count([key])</code> <a class="header-anchor" href="#data-count-key" aria-label="Permalink to &quot;`data.$count([key])`&quot;">​</a></h2><p>Get the count of values in the array. If no parameter is specified, it treats the array data as a numeric value.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$count()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is passed, it evaluates the objects within the array using the specified key.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$count(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="data-sum-key" tabindex="-1"><code>data.$sum([key])</code> <a class="header-anchor" href="#data-sum-key" aria-label="Permalink to &quot;`data.$sum([key])`&quot;">​</a></h2><p>Calculate the sum value of the array. If no parameter is given, it treats the array data as a numeric value.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$sum()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is provided, it evaluates the objects within the array using the specified key.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$sum(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="data-avg-key" tabindex="-1"><code>data.$avg([key])</code> <a class="header-anchor" href="#data-avg-key" aria-label="Permalink to &quot;`data.$avg([key])`&quot;">​</a></h2><p>Compute the average value of the array. If no parameter is supplied, it treats the array data as a numeric value.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$avg()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is passed, it evaluates the objects within the array using the specified key.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$avg(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="data-distinct-key" tabindex="-1"><code>data.$distinct([key])</code> <a class="header-anchor" href="#data-distinct-key" aria-label="Permalink to &quot;`data.$distinct([key])`&quot;">​</a></h2><p>Retrieve the unique values of the array. If no parameter is provided, it treats the array data as a numeric value.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$distinct()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When a key is passed, it evaluates the objects within the array using the specified key. In this case, the result is an array of values, not objects.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.$distinct(&#39;val&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="deep-objects" tabindex="-1">Deep objects <a class="header-anchor" href="#deep-objects" aria-label="Permalink to &quot;Deep objects&quot;">​</a></h2><p>In all cases, the key can include dots for get values in deep objects, e.g., <code>key.subkey.otherkey</code>.</p><h2 id="use-javascript-function-for-data-manipulation" tabindex="-1">Use Javascript function for data manipulation <a class="header-anchor" href="#use-javascript-function-for-data-manipulation" aria-label="Permalink to &quot;Use Javascript function for data manipulation&quot;">​</a></h2><p>Of course, you can still make use of the functions offered by Javascript for handling and analyzing arrays.</p><div class="language-svg vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">svg</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.filter(x =&gt; x </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4).map(x =&gt; x * 2)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">tspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you need to do a transformation, filter or other complex adaptation on the data before template evaluation, we recommend that you use the <a href="./transform.html"><code>function data()</code></a>.</p></div>',40),h=[l];function n(p,k,d,o,r,c){return a(),s("div",null,h)}const E=i(e,[["render",n]]);export{y as __pageData,E as default};
