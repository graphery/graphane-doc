import{_ as s,c as a,o as e,U as i}from"./chunks/framework.on6qGByC.js";const E=JSON.parse('{"title":"How to create a plugin","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"plugins/create.md","filePath":"plugins/create.md"}'),t={name:"plugins/create.md"},n=i(`<h1 id="how-to-create-a-plugin" tabindex="-1">How to create a plugin <a class="header-anchor" href="#how-to-create-a-plugin" aria-label="Permalink to &quot;How to create a plugin&quot;">​</a></h1><h2 id="directives" tabindex="-1">Directives <a class="header-anchor" href="#directives" aria-label="Permalink to &quot;Directives&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setup.extendTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineDirective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  alias, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  argument, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  template, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="svg-methods" tabindex="-1"><code>$.svg</code> methods <a class="header-anchor" href="#svg-methods" aria-label="Permalink to &quot;\`$.svg\` methods&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setup.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extendInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="d-pseudo-functions" tabindex="-1"><code>$$.d</code> pseudo functions <a class="header-anchor" href="#d-pseudo-functions" aria-label="Permalink to &quot;\`$$.d\` pseudo functions&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setup.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extendPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,7),l=[n];function p(h,o,d,c,r,k){return e(),a("div",null,l)}const g=s(t,[["render",p]]);export{E as __pageData,g as default};
