import{_ as e,o as s,c as a,Q as t}from"./chunks/framework.11e53375.js";const m=JSON.parse('{"title":"polyline","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/polyline.md","filePath":"reference/svg/lib/polyline.md"}'),l={name:"reference/svg/lib/polyline.md"},n=t('<h1 id="polyline" tabindex="-1">polyline <a class="header-anchor" href="#polyline" aria-label="Permalink to &quot;polyline&quot;">​</a></h1><p>The <code>polyline</code> SVG element is an SVG basic shape that creates straight lines connecting several points. Typically a polyline is used to create open shapes as the last point doesn&#39;t have to be connected to the first point. For closed shapes see the <code>polygon</code> element.</p><p>Usually, this element is created with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">polyline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parentElement.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;polyline&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">polyline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentElement.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;polyline&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>It&#39;s possible to create it as a disconnected element with <code>gSVG(&#39;polyline&#39;)</code> and attach it to the SVG document with <code>.attachTo()</code>.</p><p><em>More info</em>: <a href="https://developer.mozilla.org//en-US/docs/Web/SVG/Element/polyline" target="_blank" rel="noreferrer">mdn</a> | <a href="https://svgwg.org/svg2-draft/single-page.html#shapes-PolylineElement" target="_blank" rel="noreferrer">w3c</a></p><h2 id="points" tabindex="-1">.points() <a class="header-anchor" href="#points" aria-label="Permalink to &quot;.points()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">polyline.</span><span style="color:#B392F0;">points</span><span style="color:#E1E4E8;">( points )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">polyline.</span><span style="color:#6F42C1;">points</span><span style="color:#24292E;">( points )</span></span></code></pre></div><p>Set this attribute that defines the list of <code>points</code> (pairs of x,y absolute coordinates) required to draw the polyline</p><ul><li><p><strong>argument</strong>: <code>{Array|string} points</code> The list of points</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">points</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">points</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">points</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">points</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>points</code> current value.</p><ul><li><strong>returns</strong>: <code>{Array|string}</code></li></ul><h2 id="pathlength" tabindex="-1">.pathLength() <a class="header-anchor" href="#pathlength" aria-label="Permalink to &quot;.pathLength()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">polyline.</span><span style="color:#B392F0;">pathLength</span><span style="color:#E1E4E8;">( length )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">polyline.</span><span style="color:#6F42C1;">pathLength</span><span style="color:#24292E;">( length )</span></span></code></pre></div><p>Set this attribute lets specify the total length for the path, in user units.</p><ul><li><p><strong>argument</strong>: <code>{number} length</code> The total length for the path</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pathLength</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">pathLength</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pathLength</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">pathLength</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>pathLength</code> current value.</p><ul><li><p><strong>returns</strong>: <code>{number}</code></p></li><li><p><strong>Parent elements</strong>: <a href="./a.html">a</a> | <a href="./clipPath.html">clipPath</a> | <a href="./defs.html">defs</a> | <a href="./g.html">g</a> | <a href="./marker.html">marker</a> | <a href="./mask.html">mask</a> | <a href="./pattern.html">pattern</a> | <a href="./svg.html">svg</a> | <a href="./switch.html">switch</a> | <a href="./symbol.html">symbol</a>.</p></li><li><p><strong>Child elements</strong>: <a href="./animate.html">animate</a> | <a href="./animateMotion.html">animateMotion</a> | <a href="./animateTransform.html">animateTransform</a> | <a href="./desc.html">desc</a> | <a href="./metadata.html">metadata</a> | <a href="./mpath.html">mpath</a> | <a href="./set.html">set</a> | <a href="./title.html">title</a>.</p></li></ul>',20),o=[n];function p(r,c,i,h,d,y){return s(),a("div",null,o)}const E=e(l,[["render",p]]);export{m as __pageData,E as default};
