import{_ as s,o as e,c as a,Q as n}from"./chunks/framework.11e53375.js";const m=JSON.parse('{"title":"Manage elements","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/management.md","filePath":"reference/svg/lib/management.md"}'),l={name:"reference/svg/lib/management.md"},o=n(`<h1 id="manage-elements" tabindex="-1">Manage elements <a class="header-anchor" href="#manage-elements" aria-label="Permalink to &quot;Manage elements&quot;">​</a></h1><h2 id="element-add-tagname" tabindex="-1"><em>element</em>.add( <em>tagName</em> ) <a class="header-anchor" href="#element-add-tagname" aria-label="Permalink to &quot;*element*.add( *tagName* )&quot;">​</a></h2><p>Creates and attach a nested SVG element and returns its Graphane wrapper object.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parentElement.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;rect&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rect</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentElement.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="element-remove" tabindex="-1"><em>element</em>.remove() <a class="header-anchor" href="#element-remove" aria-label="Permalink to &quot;*element*.remove()&quot;">​</a></h2><p>Unlinks the object from the parent element.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">element.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">element.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="element-queryselector-selector" tabindex="-1"><em>element</em>.querySelector( <em>selector</em> ) <a class="header-anchor" href="#element-queryselector-selector" aria-label="Permalink to &quot;*element*.querySelector( *selector* )&quot;">​</a></h2><p>You can get the first nested element that maches with the selector as parameter.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lines</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;line&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lines</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;line&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="element-queryselectorall-selector" tabindex="-1"><em>element</em>.querySelectorAll( <em>selector</em> ) <a class="header-anchor" href="#element-queryselectorall-selector" aria-label="Permalink to &quot;*element*.querySelectorAll( *selector* )&quot;">​</a></h2><p>You can get the All nested element that maches with the selector as parameter.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lines</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;line&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lines</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;line&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="element-children" tabindex="-1"><em>element</em>.children() <a class="header-anchor" href="#element-children" aria-label="Permalink to &quot;*element*.children()&quot;">​</a></h2><p>Returns an array with all nested elements.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> el </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">children</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> el </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">children</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="element-parent" tabindex="-1"><em>element</em>.parent() <a class="header-anchor" href="#element-parent" aria-label="Permalink to &quot;*element*.parent()&quot;">​</a></h2><p>Returns the parent object or null if not exist.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">g</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> line.</span><span style="color:#B392F0;">parent</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">g</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> line.</span><span style="color:#6F42C1;">parent</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="element-closest-selector" tabindex="-1"><em>element</em>.closest( <em>selector</em> ) <a class="header-anchor" href="#element-closest-selector" aria-label="Permalink to &quot;*element*.closest( *selector* )&quot;">​</a></h2><p>Returns the first parent object that the selector matches or null if not found.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">g1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;g&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">g2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> g1.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;g&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (svg </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> g2.</span><span style="color:#B392F0;">closest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;svg&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">g1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;g&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">g2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;g&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (svg </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> g2.</span><span style="color:#6F42C1;">closest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;svg&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="element-clonenode-true" tabindex="-1"><em>element</em>.cloneNode([true]) <a class="header-anchor" href="#element-clonenode-true" aria-label="Permalink to &quot;*element*.cloneNode(\\[true\\])&quot;">​</a></h2><p>It creates an element copy. If the parameter is <code>true</code>, the copy is in deep and other child elements are copied too. A clone node must be attached to an element with <code>.attachTo()</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circle1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circle2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> circle1.</span><span style="color:#B392F0;">cloneNode</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">attachTo</span><span style="color:#E1E4E8;">(svg);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circle1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circle2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> circle1.</span><span style="color:#6F42C1;">cloneNode</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">attachTo</span><span style="color:#24292E;">(svg);</span></span></code></pre></div><h2 id="element-content" tabindex="-1"><em>element</em>.content() <a class="header-anchor" href="#element-content" aria-label="Permalink to &quot;*element*.content()&quot;">​</a></h2><p>If you need to get the SVG element content as a text, you can use the method <code>.content()</code> without parameters. This method returns the current inner SVG elements.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">($.svg.</span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">($.svg.</span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">());</span></span></code></pre></div><h2 id="element-content-source" tabindex="-1"><em>element</em>.content(source) <a class="header-anchor" href="#element-content-source" aria-label="Permalink to &quot;*element*.content(source)&quot;">​</a></h2><p>If you need to put the SVG element content from a text, you can use the method <code>.content(source)</code>. This method returns the current Graphane wrapper and puts the text as inner the source.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$.svg.</span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`&lt;circle r=&quot;10&quot; cx=&quot;50&quot; cy=&quot;50&quot;&gt;&lt;/circle&gt;\`</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$.svg.</span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`&lt;circle r=&quot;10&quot; cx=&quot;50&quot; cy=&quot;50&quot;&gt;&lt;/circle&gt;\`</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="element-source" tabindex="-1"><em>element</em>.source() <a class="header-anchor" href="#element-source" aria-label="Permalink to &quot;*element*.source()&quot;">​</a></h2><p>If you need to get the element source, included the element, you can use <code>.source()</code>. This method return the source element as a text.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$.svg.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;circle&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">($.svg.</span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$.svg.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">($.svg.</span><span style="color:#6F42C1;">source</span><span style="color:#24292E;">());</span></span></code></pre></div><h2 id="element-id" tabindex="-1"><em>element</em>.id() <a class="header-anchor" href="#element-id" aria-label="Permalink to &quot;*element*.id()&quot;">​</a></h2><p>Returns the current unique ID. If the element does not have a unique ID, it is created.</p><h2 id="element-href" tabindex="-1"><em>element</em>.href() <a class="header-anchor" href="#element-href" aria-label="Permalink to &quot;*element*.href()&quot;">​</a></h2><p>Returns the unique ID as a <code>#id</code></p><h2 id="element-url" tabindex="-1"><em>element</em>.url() <a class="header-anchor" href="#element-url" aria-label="Permalink to &quot;*element*.url()&quot;">​</a></h2><p>Returns the unique ID as a <code>url(id)</code></p><h2 id="element-el" tabindex="-1"><em>element</em>.el <a class="header-anchor" href="#element-el" aria-label="Permalink to &quot;*element*.el&quot;">​</a></h2><p>In some cases, you need the unwrapped original element. In these cases you can get the original element wrapped with the attribute <code>.el</code>.</p>`,42),p=[o];function t(c,r,y,E,i,d){return e(),a("div",null,p)}const u=s(l,[["render",t]]);export{m as __pageData,u as default};
