import{_ as e,c as a,o as t,U as o}from"./chunks/framework.on6qGByC.js";const m=JSON.parse('{"title":"Why to Use Web Components","description":"","frontmatter":{},"headers":[],"relativePath":"guide/in-depth/architecture/webcomponent.md","filePath":"guide/in-depth/architecture/webcomponent.md"}'),r={name:"guide/in-depth/architecture/webcomponent.md"},n=o('<h1 id="why-to-use-web-components" tabindex="-1">Why to Use Web Components <a class="header-anchor" href="#why-to-use-web-components" aria-label="Permalink to &quot;Why to Use Web Components&quot;">​</a></h1><p>Web Components is a suite of different standard technologies allowing you to create reusable custom elements. Here are a few reasons why we consider the use of web components for Graphane:</p><h2 id="encapsulation" tabindex="-1">Encapsulation <a class="header-anchor" href="#encapsulation" aria-label="Permalink to &quot;Encapsulation&quot;">​</a></h2><p>Web components follow the concept of Shadow DOM that provides encapsulation. This means the styles and scripts you add inside a web component cannot interfere with the rest of your document.</p><h2 id="reusability" tabindex="-1">Reusability <a class="header-anchor" href="#reusability" aria-label="Permalink to &quot;Reusability&quot;">​</a></h2><p>Web components are reusable across different web applications. A component you create is not tied to a specific framework, so it can be used anywhere HTML is used.</p><h2 id="interoperability" tabindex="-1">Interoperability <a class="header-anchor" href="#interoperability" aria-label="Permalink to &quot;Interoperability&quot;">​</a></h2><p>Web components can be used with any JavaScript library or framework that works with HTML. Whether you&#39;re using React, Vue, Angular, Svelte, or simple HTML and JavaScript, web components are built to be versatile.</p><h2 id="standards-based" tabindex="-1">Standards-Based <a class="header-anchor" href="#standards-based" aria-label="Permalink to &quot;Standards-Based&quot;">​</a></h2><p>Web components are based on existing web standards. Features to support web components are built directly into the browser, rather than added on through libraries or frameworks.</p><h2 id="runtime" tabindex="-1">Runtime <a class="header-anchor" href="#runtime" aria-label="Permalink to &quot;Runtime&quot;">​</a></h2><p>Web components are run directly by the browser, reducing the need for extensive libraries, transpiler, compilers, and builders.</p><h2 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">​</a></h2><p>Since web components are native to the browser, they can offer excellent performance in comparison to some JavaScript-heavy libraries or frameworks.</p><h2 id="size" tabindex="-1">Size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;Size&quot;">​</a></h2><p>Web components tend to be less code-heavy, leading to smaller, more lightweight applications.</p><p>To sum up, using web components can bring efficiency and versatility, better performance and smaller size to Graphane.</p>',17),i=[n];function s(c,l,d,h,p,b){return t(),a("div",null,i)}const f=e(r,[["render",s]]);export{m as __pageData,f as default};
