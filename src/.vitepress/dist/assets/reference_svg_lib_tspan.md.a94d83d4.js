import{_ as s,o as e,c as a,Q as t}from"./chunks/framework.875adba1.js";const u=JSON.parse('{"title":"tspan","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/tspan.md","filePath":"reference/svg/lib/tspan.md"}'),n={name:"reference/svg/lib/tspan.md"},o=t('<h1 id="tspan" tabindex="-1">tspan <a class="header-anchor" href="#tspan" aria-label="Permalink to &quot;tspan&quot;">​</a></h1><p>The SVG <code>tspan</code> element defines a subtext within a <code>text</code> element or another <code>tspan</code> element. It allows for adjustment of the style and/or position of that subtext as needed.</p><p>Usually, this element is created with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tspan</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parentElement.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tspan&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tspan</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentElement.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;tspan&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>It&#39;s possible to create it as a disconnected element with <code>gSVG(&#39;tspan&#39;)</code> and attach it to the SVG document with <code>.attachTo()</code>.</p><p><em>More info</em>: <a href="https://developer.mozilla.org//en-US/docs/Web/SVG/Element/tspan" target="_blank" rel="noreferrer">mdn</a> | <a href="https://svgwg.org/svg2-draft/single-page.html#text-TextElement" target="_blank" rel="noreferrer">w3c</a></p><h2 id="x" tabindex="-1">.x() <a class="header-anchor" href="#x" aria-label="Permalink to &quot;.x()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">( x )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">( x )</span></span></code></pre></div><p>Set the <code>x</code> coordinate of the starting point of the text baseline.</p><ul><li><p><strong>argument</strong>: <code>{number} x</code> The x value</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>x</code> current value.</p><ul><li><strong>returns</strong>: <code>{number}</code></li></ul><h2 id="y" tabindex="-1">.y() <a class="header-anchor" href="#y" aria-label="Permalink to &quot;.y()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">( y )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">( y )</span></span></code></pre></div><p>Set the <code>y</code> coordinate of the starting point of the text baseline.</p><ul><li><p><strong>argument</strong>: <code>{number} y</code> The y value</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">y</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>y</code> current value.</p><ul><li><strong>returns</strong>: <code>{number}</code></li></ul><h2 id="dx" tabindex="-1">.dx() <a class="header-anchor" href="#dx" aria-label="Permalink to &quot;.dx()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">dx</span><span style="color:#E1E4E8;">( x )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">dx</span><span style="color:#24292E;">( x )</span></span></code></pre></div><p>Set shifts the text position horizontally from a previous text element.</p><ul><li><p><strong>argument</strong>: <code>{number} x</code> The x gap from the previous value</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">dx</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dx</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">dx</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>dx</code> current value.</p><ul><li><strong>returns</strong>: <code>{number}</code></li></ul><h2 id="dy" tabindex="-1">.dy() <a class="header-anchor" href="#dy" aria-label="Permalink to &quot;.dy()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">dy</span><span style="color:#E1E4E8;">( y )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">dy</span><span style="color:#24292E;">( y )</span></span></code></pre></div><p>Set shifts the text position vertically from a previous text element.</p><ul><li><p><strong>argument</strong>: <code>{number} y</code> The y gap from the previous value</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dy</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">dy</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">dy</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>dy</code> current value.</p><ul><li><strong>returns</strong>: <code>{number}</code></li></ul><h2 id="rotate" tabindex="-1">.rotate() <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;.rotate()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">rotate</span><span style="color:#E1E4E8;">( angle )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">rotate</span><span style="color:#24292E;">( angle )</span></span></code></pre></div><p>Set rotates orientation of each individual glyph. Can <code>rotate</code> glyphs individually.</p><ul><li><p><strong>argument</strong>: <code>{number|string} ange</code> Must be <code>auto</code> | <code>auto-reverse</code> | angle value</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rotate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">rotate</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rotate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">rotate</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>rotate</code> current value.</p><ul><li><strong>returns</strong>: <code>{number|string}</code></li></ul><h2 id="lengthadjust" tabindex="-1">.lengthAdjust() <a class="header-anchor" href="#lengthadjust" aria-label="Permalink to &quot;.lengthAdjust()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">lengthAdjust</span><span style="color:#E1E4E8;">( mode )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">lengthAdjust</span><span style="color:#24292E;">( mode )</span></span></code></pre></div><p>Set how the text is stretched or compressed to fit the width defined by the textLength attribute.</p><ul><li><p><strong>argument</strong>: <code>{string} mode</code> Must be <code>spacing</code> | <code>spacingAndGlyphs</code></p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lengthAdjust</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">lengthAdjust</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lengthAdjust</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">lengthAdjust</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>lengthAdjust</code> current value.</p><ul><li><strong>returns</strong>: <code>{string}</code></li></ul><h2 id="textlength" tabindex="-1">.textLength() <a class="header-anchor" href="#textlength" aria-label="Permalink to &quot;.textLength()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tspan.</span><span style="color:#B392F0;">textLength</span><span style="color:#E1E4E8;">( length )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tspan.</span><span style="color:#6F42C1;">textLength</span><span style="color:#24292E;">( length )</span></span></code></pre></div><p>Set a width that the text should be scaled to fit.</p><ul><li><p><strong>argument</strong>: <code>{number|tring} length</code> The length value (length or percentage)</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">textLength</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">textLength</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">textLength</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">textLength</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>textLength</code> current value.</p><ul><li><p><strong>returns</strong>: <code>{number|string}</code></p></li><li><p><strong>Parent elements</strong>: <a href="./text.html">text</a> | <a href="./textPath.html">textPath</a> | <a href="./tspan.html">tspan</a>.</p></li><li><p><strong>Child elements</strong>: <a href="./a.html">a</a> | <a href="./animate.html">animate</a> | <a href="./desc.html">desc</a> | <a href="./metadata.html">metadata</a> | <a href="./set.html">set</a> | <a href="./title.html">title</a> | <a href="./tspan.html">tspan</a>.</p></li></ul>',55),l=[o];function p(c,r,i,d,h,y){return e(),a("div",null,l)}const E=s(n,[["render",p]]);export{u as __pageData,E as default};
