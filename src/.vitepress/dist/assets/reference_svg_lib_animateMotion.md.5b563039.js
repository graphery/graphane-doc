import{_ as a,o as e,c as s,Q as t}from"./chunks/framework.875adba1.js";const g=JSON.parse('{"title":"animateMotion","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/animateMotion.md","filePath":"reference/svg/lib/animateMotion.md"}'),o={name:"reference/svg/lib/animateMotion.md"},n=t('<h1 id="animatemotion" tabindex="-1">animateMotion <a class="header-anchor" href="#animatemotion" aria-label="Permalink to &quot;animateMotion&quot;">​</a></h1><p>The SVG <code>animateMotion</code> element let define how an element moves along a motion path.</p><p>Usually, this element is created with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">animateMotion</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parentElement.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;animateMotion&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">animateMotion</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentElement.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;animateMotion&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>It&#39;s possible to create it as a disconnected element with <code>gSVG(&#39;animateMotion&#39;)</code> and attach it to the SVG document with <code>.attachTo()</code>.</p><p><em>More info</em>: <a href="https://developer.mozilla.org//en-US/docs/Web/SVG/Element/animateMotion" target="_blank" rel="noreferrer">mdn</a> | <a href="https://svgwg.org/specs/animations/#AnimateMotionElement" target="_blank" rel="noreferrer">w3c</a></p><h2 id="keypoints" tabindex="-1">.keyPoints() <a class="header-anchor" href="#keypoints" aria-label="Permalink to &quot;.keyPoints()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">animateMotion.</span><span style="color:#B392F0;">keyPoints</span><span style="color:#E1E4E8;">( value )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">animateMotion.</span><span style="color:#6F42C1;">keyPoints</span><span style="color:#24292E;">( value )</span></span></code></pre></div><p>Set the <code>keyPoints</code> attribute indicate, in the range [0,1], how far is the object along the path for each keyTimes associated values.</p><ul><li><p><strong>argument</strong>: <code>{number} value</code> A value between 0 and 1</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">keyPoints</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">keyPoints</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">keyPoints</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">keyPoints</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>keyPoints</code> current value.</p><ul><li><strong>returns</strong>: <code>{number}</code> A value between 0 and 1</li></ul><h2 id="path" tabindex="-1">.path() <a class="header-anchor" href="#path" aria-label="Permalink to &quot;.path()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">animateMotion.</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">( path )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">animateMotion.</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">( path )</span></span></code></pre></div><p>Set this attribute defines the <code>path</code> of the motion, using the same syntax as the <code>d</code> attribute.</p><ul><li><p><strong>argument</strong>: <code>{string} path</code> Motion path as a <code>d</code> attribute</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">d</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>path</code> current value.</p><ul><li><strong>returns</strong>: <code>{string}</code> Current path</li></ul><h2 id="rotate" tabindex="-1">.rotate() <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;.rotate()&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">animateMotion.</span><span style="color:#B392F0;">rotate</span><span style="color:#E1E4E8;">( rotation )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">animateMotion.</span><span style="color:#6F42C1;">rotate</span><span style="color:#24292E;">( rotation )</span></span></code></pre></div><p>Set the rotation applied to the animated element along a path, usually to make it pointing in the direction of the animation.</p><ul><li><p><strong>argument</strong>: <code>{number|string} rotation</code> Must be a number or &#39;auto&#39; | &#39;auto-reverse&#39;</p></li><li><p><strong>returns</strong>: <code>{gSVGObject}</code> The original object</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rotate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> element.</span><span style="color:#B392F0;">rotate</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rotate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">rotate</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Get the <code>rotate</code> current value.</p><ul><li><p><strong>returns</strong>: <code>{number|string}</code> Current rotation</p></li><li><p><strong>Parent elements</strong>: <a href="./a.html">a</a> | <a href="./circle.html">circle</a> | <a href="./clipPath.html">clipPath</a> | <a href="./defs.html">defs</a> | <a href="./ellipse.html">ellipse</a> | <a href="./g.html">g</a> | <a href="./image.html">image</a> | <a href="./line.html">line</a> | <a href="./marker.html">marker</a> | <a href="./mask.html">mask</a> | <a href="./path.html">path</a> | <a href="./pattern.html">pattern</a> | <a href="./polygon.html">polygon</a> | <a href="./polyline.html">polyline</a> | <a href="./rect.html">rect</a> | <a href="./svg.html">svg</a> | <a href="./switch.html">switch</a> | <a href="./symbol.html">symbol</a> | <a href="./text.html">text</a> | <a href="./use.html">use</a>.</p></li><li><p><strong>Child elements</strong>: <a href="./desc.html">desc</a> | <a href="./metadata.html">metadata</a> | <a href="./mpath.html">mpath</a> | <a href="./title.html">title</a>.</p></li></ul>',27),l=[n];function p(r,c,i,h,d,y){return e(),s("div",null,l)}const u=a(o,[["render",p]]);export{g as __pageData,u as default};
