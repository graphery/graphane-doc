import{_ as e,c as a,o as t,U as i}from"./chunks/framework.on6qGByC.js";const m=JSON.parse('{"title":"Graphane Extensibility","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"plugins/index.md","filePath":"plugins/index.md"}'),s={name:"plugins/index.md"},o=i('<h1 id="graphane-extensibility" tabindex="-1">Graphane Extensibility <a class="header-anchor" href="#graphane-extensibility" aria-label="Permalink to &quot;Graphane Extensibility&quot;">​</a></h1><p>Graphane is extensible by plugins. These can extend the standard Graphane functionality according to the needs. There are some plugins available with Graphane, but it is also possible to create your own custom plugin.</p><h2 id="how-to-use-a-plugin" tabindex="-1">How to use a plugin <a class="header-anchor" href="#how-to-use-a-plugin" aria-label="Permalink to &quot;How to use a plugin&quot;">​</a></h2><p>To load a plugin from Graphane Composer we will use <code>&lt;script type=&quot;plugin&quot; src=&quot;...&quot;&gt;&lt;/script&gt;</code>. The <code>src</code> attribute must include the URL to the plugin Javascript file.</p><h2 id="plugins-available" tabindex="-1">Plugins available <a class="header-anchor" href="#plugins-available" aria-label="Permalink to &quot;Plugins available&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><a href="./catalog/shapes.html">Shapes</a></p><p>Create new shapes in a <code>&lt;path&gt;</code> element.</p></div><div class="info custom-block"><p class="custom-block-title"><a href="./catalog/observe-resize.html">Observe Resize</a></p><p>Add <code>resize</code> event to the SVG</p></div><div class="info custom-block"><p class="custom-block-title"><a href="./catalog/non-scaling-size.html">Keep Aspect</a></p><p>Keep the size and/or the stroke width to elements when the SVG is resized.</p></div><div class="info custom-block"><p class="custom-block-title"><a href="./catalog/load.html">Load</a></p><p>Load external resources and include in the SVG.</p></div>',9),l=[o];function n(c,r,p,d,h,u){return t(),a("div",null,l)}const g=e(s,[["render",n]]);export{m as __pageData,g as default};
