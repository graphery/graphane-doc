import{_ as e,o as a,c as t,Q as i}from"./chunks/framework.11e53375.js";const u=JSON.parse('{"title":"animate","description":"","frontmatter":{},"headers":[],"relativePath":"reference/svg/lib/animate.md","filePath":"reference/svg/lib/animate.md"}'),r={name:"reference/svg/lib/animate.md"},l=i('<h1 id="animate" tabindex="-1">animate <a class="header-anchor" href="#animate" aria-label="Permalink to &quot;animate&quot;">​</a></h1><p>The SVG <code>animate</code> element provides a way to animate an attribute of an element over time.</p><p>Usually, this element is created with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">animate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parentElement.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;animate&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">animate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentElement.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;animate&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>It&#39;s possible to create it as a disconnected element with <code>gSVG(&#39;animate&#39;)</code> and attach it to the SVG document with <code>.attachTo()</code>.</p><h2 id="attributename" tabindex="-1">.attributeName() <a class="header-anchor" href="#attributename" aria-label="Permalink to &quot;.attributeName()&quot;">​</a></h2><p><code>.attributeName()</code> defines the attribute to animate.</p><h2 id="from-and-to" tabindex="-1">.from() and .to() <a class="header-anchor" href="#from-and-to" aria-label="Permalink to &quot;.from() and .to()&quot;">​</a></h2><p><code>.from()</code> and <code>.to()</code> must be used for defining the initial and finish values of this attribute.</p><h2 id="dur" tabindex="-1">.dur() <a class="header-anchor" href="#dur" aria-label="Permalink to &quot;.dur()&quot;">​</a></h2><p><code>.dur()</code> defines the animation duration (&#39;1s&#39; or &#39;1000ms&#39; are valid values).</p><h2 id="fill" tabindex="-1">.fill() <a class="header-anchor" href="#fill" aria-label="Permalink to &quot;.fill()&quot;">​</a></h2><p><code>.fill()</code> defines the final state of the animation. If the value is <code>&#39;freeze&#39;</code>, the state of the last animation frame is kept, but by default is <code>&#39;remove&#39;</code>, and as a result, after the last animation frame, the attribute value returns to the first.</p><h2 id="begin-and-beginelement" tabindex="-1">.begin() and .beginElement() <a class="header-anchor" href="#begin-and-beginelement" aria-label="Permalink to &quot;.begin() and .beginElement()&quot;">​</a></h2><p>For control about when the animation is running, we can configure the animate element <code>.begin(&#39;indefinite&#39;)</code> and call to <code>.beginElement()</code> for execute the animation.</p><p>With <code>.values()</code> and <code>.keyTimes()</code> you can define with more precision the animation, establishing the values that the property has to have in each moment.</p><p><em>More info</em>: <a href="https://developer.mozilla.org//en-US/docs/Web/SVG/Element/animate" target="_blank" rel="noreferrer">mdn</a> | <a href="https://svgwg.org/specs/animations/#AnimateElement" target="_blank" rel="noreferrer">w3c</a></p><ul><li><p><strong>Parent elements</strong>: <a href="./a.html">a</a> | <a href="./circle.html">circle</a> | <a href="./clipPath.html">clipPath</a> | <a href="./defs.html">defs</a> | <a href="./ellipse.html">ellipse</a> | <a href="./FilterPrimitives.html#feblend">feBlend</a> | <a href="./FilterPrimitives.html#fecolormatrix">feColorMatrix</a> | <a href="./FilterPrimitives.html#fecomposite">feComposite</a> | <a href="./FilterPrimitives.html#feconvolvematrix">feConvolveMatrix</a> | <a href="./FilterPrimitives.html#fedisplacementmap">feDisplacementMap</a> | <a href="./FilterPrimitives.html#fedistantlight">feDistantLight</a> | <a href="./FilterPrimitives.html#fedropshadow">feDropShadow</a> | <a href="./FilterPrimitives.html#feflood">feFlood</a> | <a href="./FilterPrimitives.html#fefunca">feFuncA</a> | <a href="./FilterPrimitives.html#fefuncb">feFuncB</a> | <a href="./FilterPrimitives.html#fefuncg">feFuncG</a> | <a href="./FilterPrimitives.html#fefuncr">feFuncR</a> | <a href="./FilterPrimitives.html#fegaussianblur">feGaussianBlur</a> | <a href="./FilterPrimitives.html#feimage">feImage</a> | <a href="./FilterPrimitives.html#femergenode">feMergeNode</a> | <a href="./FilterPrimitives.html#femorphology">feMorphology</a> | <a href="./FilterPrimitives.html#feoffset">feOffset</a> | <a href="./FilterPrimitives.html#fepointlight">fePointLight</a> | <a href="./FilterPrimitives.html#fespotlight">feSpotLight</a> | <a href="./FilterPrimitives.html#fetile">feTile</a> | <a href="./FilterPrimitives.html#feturbulence">feTurbulence</a> | <a href="./filter.html">filter</a> | <a href="./g.html">g</a> | <a href="./image.html">image</a> | <a href="./line.html">line</a> | <a href="./linearGradient.html">linearGradient</a> | <a href="./marker.html">marker</a> | <a href="./mask.html">mask</a> | <a href="./path.html">path</a> | <a href="./pattern.html">pattern</a> | <a href="./polygon.html">polygon</a> | <a href="./polyline.html">polyline</a> | <a href="./radialGradient.html">radialGradient</a> | <a href="./rect.html">rect</a> | <a href="./stop.html">stop</a> | <a href="./svg.html">svg</a> | <a href="./switch.html">switch</a> | <a href="./symbol.html">symbol</a> | <a href="./text.html">text</a> | <a href="./textPath.html">textPath</a> | <a href="./tspan.html">tspan</a> | <a href="./use.html">use</a>.</p></li><li><p><strong>Child elements</strong>: <a href="./desc.html">desc</a> | <a href="./metadata.html">metadata</a> | <a href="./title.html">title</a>.</p></li></ul>',18),n=[l];function o(s,h,m,f,c,d){return a(),t("div",null,n)}const g=e(r,[["render",o]]);export{u as __pageData,g as default};
